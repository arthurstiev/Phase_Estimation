//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Intrinsic.Interfaces;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"PhaseEstimation\",\"Name\":\"U\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\vilonde\\\\source\\\\PhaseEstimation\\\\Program.qs\",\"Position\":{\"Item1\":9,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":12}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"psi\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":14},\"Item2\":{\"Line\":1,\"Column\":17}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"PhaseEstimation\",\"Name\":\"U\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vilonde\\\\source\\\\PhaseEstimation\\\\Program.qs\",\"Position\":{\"Item1\":9,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":12}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"PhaseEstimation\",\"Name\":\"U\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vilonde\\\\source\\\\PhaseEstimation\\\\Program.qs\",\"Position\":{\"Item1\":9,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":38},\"Item2\":{\"Line\":1,\"Column\":47}},\"Documentation\":[\"automatically generated QsAdjoint specialization for PhaseEstimation.U\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"PhaseEstimation\",\"Name\":\"U\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vilonde\\\\source\\\\PhaseEstimation\\\\Program.qs\",\"Position\":{\"Item1\":9,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":38},\"Item2\":{\"Line\":1,\"Column\":47}},\"Documentation\":[\"automatically generated QsControlled specialization for PhaseEstimation.U\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"PhaseEstimation\",\"Name\":\"U\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vilonde\\\\source\\\\PhaseEstimation\\\\Program.qs\",\"Position\":{\"Item1\":9,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":38},\"Item2\":{\"Line\":1,\"Column\":47}},\"Documentation\":[\"automatically generated QsControlledAdjoint specialization for PhaseEstimation.U\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"PhaseEstimation\",\"Name\":\"basicPhaseEstimation\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\vilonde\\\\source\\\\PhaseEstimation\\\\Program.qs\",\"Position\":{\"Item1\":16,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":31}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"n\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":32},\"Item2\":{\"Line\":1,\"Column\":33}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"theta\"]},\"Type\":{\"Case\":\"Double\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":41},\"Item2\":{\"Line\":1,\"Column\":46}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"oracle\"]},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":57},\"Item2\":{\"Line\":1,\"Column\":63}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"psi\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":92},\"Item2\":{\"Line\":1,\"Column\":95}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Double\"},{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"ReturnType\":{\"Case\":\"Result\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"PhaseEstimation\",\"Name\":\"basicPhaseEstimation\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vilonde\\\\source\\\\PhaseEstimation\\\\Program.qs\",\"Position\":{\"Item1\":16,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":31}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"PhaseEstimation\",\"Name\":\"run\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"EntryPoint\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]},\"Argument\":{\"Item1\":{\"Case\":\"UnitValue\"},\"Item2\":[],\"Item3\":{\"Case\":\"UnitType\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":12},\"Item2\":{\"Line\":1,\"Column\":14}}]}},\"Offset\":{\"Item1\":31,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\vilonde\\\\source\\\\PhaseEstimation\\\\Program.qs\",\"Position\":{\"Item1\":32,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":14}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"PhaseEstimation\",\"Name\":\"run\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\vilonde\\\\source\\\\PhaseEstimation\\\\Program.qs\",\"Position\":{\"Item1\":32,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":14}},\"Documentation\":[]}")]
#line hidden
namespace PhaseEstimation
{
    [SourceLocation("C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs", OperationFunctor.Body, 10, 17)]
    [SourceLocation("C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs", OperationFunctor.Adjoint, 10, 17)]
    [SourceLocation("C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs", OperationFunctor.Controlled, 10, 17)]
    [SourceLocation("C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs", OperationFunctor.ControlledAdjoint, 10, 17)]
    public partial class U : Unitary<IQArray<Qubit>>, ICallable
    {
        public U(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "U";
        String ICallable.FullName => "PhaseEstimation.U";
        protected ICallable<QVoid, Double> Microsoft__Quantum__Math__PI
        {
            get;
            set;
        }

        protected IUnitary<(Double,Qubit)> Microsoft__Quantum__Intrinsic__Rz
        {
            get;
            set;
        }

        protected ICallable Microsoft__Quantum__Arrays__Most
        {
            get;
            set;
        }

        protected ICallable Microsoft__Quantum__Arrays__Tail
        {
            get;
            set;
        }

        public override Func<IQArray<Qubit>, QVoid> __Body__ => (__in__) =>
        {
            var psi = __in__;
#line 12 "C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs"
            var phi = ((0.25D * 2D) * Microsoft__Quantum__Math__PI.Apply(QVoid.Instance));
#line 13 "C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs"
            Microsoft__Quantum__Intrinsic__Rz.Controlled.Apply((Microsoft__Quantum__Arrays__Most.Apply<IQArray<Qubit>>(psi), (phi, Microsoft__Quantum__Arrays__Tail.Apply<Qubit>(psi))));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<IQArray<Qubit>, QVoid> __AdjointBody__ => (__in__) =>
        {
            var psi = __in__;
#line 10 "C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs"
            var __qsVar0__phi__ = ((0.25D * 2D) * Microsoft__Quantum__Math__PI.Apply(QVoid.Instance));
#line 10 "C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs"
            Microsoft__Quantum__Intrinsic__Rz.Controlled.Adjoint.Apply((Microsoft__Quantum__Arrays__Most.Apply<IQArray<Qubit>>(psi), (__qsVar0__phi__, Microsoft__Quantum__Arrays__Tail.Apply<Qubit>(psi))));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,IQArray<Qubit>), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (__controlQubits__,psi) = __in__;
#line 10 "C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs"
            var phi = ((0.25D * 2D) * Microsoft__Quantum__Math__PI.Apply(QVoid.Instance));
#line 10 "C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs"
            Microsoft__Quantum__Intrinsic__Rz.Controlled.Controlled.Apply((__controlQubits__, (Microsoft__Quantum__Arrays__Most.Apply<IQArray<Qubit>>(psi), (phi, Microsoft__Quantum__Arrays__Tail.Apply<Qubit>(psi)))));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,IQArray<Qubit>), QVoid> __ControlledAdjointBody__ => (__in__) =>
        {
            var (__controlQubits__,psi) = __in__;
#line 10 "C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs"
            var __qsVar0__phi__ = ((0.25D * 2D) * Microsoft__Quantum__Math__PI.Apply(QVoid.Instance));
#line 10 "C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs"
            Microsoft__Quantum__Intrinsic__Rz.Controlled.Adjoint.Controlled.Apply((__controlQubits__, (Microsoft__Quantum__Arrays__Most.Apply<IQArray<Qubit>>(psi), (__qsVar0__phi__, Microsoft__Quantum__Arrays__Tail.Apply<Qubit>(psi)))));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Math__PI = this.__Factory__.Get<ICallable<QVoid, Double>>(typeof(global::Microsoft.Quantum.Math.PI));
            this.Microsoft__Quantum__Intrinsic__Rz = this.__Factory__.Get<IUnitary<(Double,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.Rz));
            this.Microsoft__Quantum__Arrays__Most = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Arrays.Most<>));
            this.Microsoft__Quantum__Arrays__Tail = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Arrays.Tail<>));
        }

        public override IApplyData __DataIn__(IQArray<Qubit> data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, IQArray<Qubit> psi)
        {
            return __m__.Run<U, IQArray<Qubit>, QVoid>(psi);
        }
    }

    [SourceLocation("C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs", OperationFunctor.Body, 17, 33)]
    public partial class basicPhaseEstimation : Operation<(Int64,Double,IControllable,IQArray<Qubit>), Result>, ICallable
    {
        public basicPhaseEstimation(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Int64,Double,IControllable,IQArray<Qubit>)>, IApplyData
        {
            public In((Int64,Double,IControllable,IQArray<Qubit>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return Qubit.Concat(((IApplyData)Data.Item3)?.Qubits, ((IApplyData)Data.Item4)?.Qubits);
                }
            }
        }

        String ICallable.Name => "basicPhaseEstimation";
        String ICallable.FullName => "PhaseEstimation.basicPhaseEstimation";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        protected IUnitary<(Double,Qubit)> Microsoft__Quantum__Intrinsic__Rz
        {
            get;
            set;
        }

        protected ICallable<Int64, Double> Microsoft__Quantum__Convert__IntAsDouble
        {
            get;
            set;
        }

        protected ICallable<Qubit, Result> Microsoft__Quantum__Measurement__MResetZ
        {
            get;
            set;
        }

        public override Func<(Int64,Double,IControllable,IQArray<Qubit>), Result> __Body__ => (__in__) =>
        {
            var (n,theta,oracle,psi) = __in__;
#line hidden
            {
#line 19 "C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs"
                var aux = Allocate__.Apply();
#line hidden
                bool __arg1__ = true;
                try
                {
#line 21 "C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs"
                    Microsoft__Quantum__Intrinsic__H.Apply(aux);
#line 22 "C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs"
                    Microsoft__Quantum__Intrinsic__Rz.Apply(((Microsoft__Quantum__Convert__IntAsDouble.Apply(n) * theta), aux));
#line 23 "C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs"
                    foreach (var __arg2__ in new QRange(0L, (n - 1L)))
#line hidden
                    {
#line 24 "C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs"
                        oracle.Controlled.Apply((new QArray<Qubit>(aux), psi));
                    }

#line 26 "C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs"
                    Microsoft__Quantum__Intrinsic__H.Apply(aux);
#line 27 "C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs"
                    var result = Microsoft__Quantum__Measurement__MResetZ.Apply(aux);
#line 29 "C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs"
                    return result;
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(aux);
                    }
                }
            }
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
            this.Microsoft__Quantum__Intrinsic__Rz = this.__Factory__.Get<IUnitary<(Double,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.Rz));
            this.Microsoft__Quantum__Convert__IntAsDouble = this.__Factory__.Get<ICallable<Int64, Double>>(typeof(global::Microsoft.Quantum.Convert.IntAsDouble));
            this.Microsoft__Quantum__Measurement__MResetZ = this.__Factory__.Get<ICallable<Qubit, Result>>(typeof(global::Microsoft.Quantum.Measurement.MResetZ));
        }

        public override IApplyData __DataIn__((Int64,Double,IControllable,IQArray<Qubit>) data) => new In(data);
        public override IApplyData __DataOut__(Result data) => new QTuple<Result>(data);
        public static System.Threading.Tasks.Task<Result> Run(IOperationFactory __m__, Int64 n, Double theta, IControllable oracle, IQArray<Qubit> psi)
        {
            return __m__.Run<basicPhaseEstimation, (Int64,Double,IControllable,IQArray<Qubit>), Result>((n, theta, oracle, psi));
        }
    }

    [SourceLocation("C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs", OperationFunctor.Body, 33, -1)]
    public partial class run : Operation<QVoid, (Int64,Int64)>, ICallable
    {
        public run(IOperationFactory m) : base(m)
        {
        }

        public class Out : QTuple<(Int64,Int64)>, IApplyData
        {
            public Out((Int64,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "run";
        String ICallable.FullName => "PhaseEstimation.run";
        public static EntryPointInfo<QVoid, (Int64,Int64)> Info => new EntryPointInfo<QVoid, (Int64,Int64)>(typeof(run));
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary Microsoft__Quantum__Canon__ApplyToEachCA
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        protected ICallable<(Int64,Double,IControllable,IQArray<Qubit>), Result> basicPhaseEstimation__
        {
            get;
            set;
        }

        protected IUnitary<IQArray<Qubit>> U__
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, QVoid> ResetAll__
        {
            get;
            set;
        }

        public override Func<QVoid, (Int64,Int64)> __Body__ => (__in__) =>
        {
#line 35 "C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs"
            var nShots = 50L;
#line 37 "C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs"
            var theta = 0D;
#line 38 "C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs"
            var n = 2L;
#line hidden
            {
#line 39 "C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs"
                var psi = Allocate__.Apply(3L);
#line hidden
                bool __arg1__ = true;
                try
                {
#line 40 "C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs"
                    Microsoft__Quantum__Canon__ApplyToEachCA.Apply((Microsoft__Quantum__Intrinsic__X, psi));
#line 42 "C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs"
                    var nZero = 0L;
#line 43 "C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs"
                    var nOne = 0L;
#line 44 "C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs"
                    foreach (var __arg2__ in new QRange(0L, (nShots - 1L)))
#line hidden
                    {
#line 45 "C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs"
                        var result = basicPhaseEstimation__.Apply((n, theta, U__, psi));
#line 46 "C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs"
                        if ((result == Result.One))
                        {
#line 47 "C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs"
                            nOne = (nOne + 1L);
                        }
                        else
                        {
#line 49 "C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs"
                            nZero = (nZero + 1L);
                        }
                    }

#line 53 "C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs"
                    ResetAll__.Apply(psi);
#line 54 "C:\\Users\\vilonde\\source\\PhaseEstimation\\Program.qs"
                    return (nZero, nOne);
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(psi);
                    }
                }
            }
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Canon__ApplyToEachCA = this.__Factory__.Get<IUnitary>(typeof(global::Microsoft.Quantum.Canon.ApplyToEachCA<>));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
            this.basicPhaseEstimation__ = this.__Factory__.Get<ICallable<(Int64,Double,IControllable,IQArray<Qubit>), Result>>(typeof(basicPhaseEstimation));
            this.U__ = this.__Factory__.Get<IUnitary<IQArray<Qubit>>>(typeof(U));
            this.ResetAll__ = this.__Factory__.Get<ICallable<IQArray<Qubit>, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.ResetAll));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__((Int64,Int64) data) => new Out(data);
        public static System.Threading.Tasks.Task<(Int64,Int64)> Run(IOperationFactory __m__)
        {
            return __m__.Run<run, QVoid, (Int64,Int64)>(QVoid.Instance);
        }
    }
}